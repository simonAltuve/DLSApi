{
  "swagger": "2.0",
  "info": {
    "description": "Backend ::Simon Altuve:: App",
    "version": "1.0.0",
    "title": "Swagger Simon Altuve",
    "contact": {
      "email": "simonc25@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/v1/apisa",
  "tags": [
    {
      "name": "Authentication",
      "description": "Everything about authentication"
    },
    {
      "name": "User",
      "description": "Everything about users"
    },
    {
      "name": "Light",
      "description": "Everything about lights"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate an User",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "__v": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create an User",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Finds All the Users",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a User",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/lights": {
      "post": {
        "tags": [
          "Light"
        ],
        "summary": "Process a plane room",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "room",
            "description": "String with 0 and 1 that represent the map room.",
            "required": true,
            "type": "object",
            "properties": {
              "room": {
                "type": "0000*0010*0010*0000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "room": {
                  "type": "2333*3312*3313*3233"
                }
              }
            }
          },
          "400": {
            "message": "Invalid format"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}